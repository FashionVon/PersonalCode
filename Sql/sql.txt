CREATE TABLE `ecm_tmp_wechat_user`(
	id int(11) unsigned primary key auto_increment comment "主键",
	openid varchar(50) not null default "" unique,
	image_path varchar(80) not null default "" comment "用户上传的图片存储位置",
	sex  tinyint(1) not null default 1 comment "1为男　2为女",
	supports int(11) not null default 0 comment "支持票数",
	nickname varchar(80) not null default '' comment '用户昵称',
	get_ticket int(11) not null default 0 comment "领券数量",
	description varchar(100) not null default '' comment "用户对图片的描述")ENGINE=InnoDB DEFAULT CHARSET=UTF8;



CREATE DEFINER=`root`@`localhost` PROCEDURE `get_rzq`(in oid varchar(50), in nickName varchar(50) CHARACTER SET utf8)
BEGIN                                 
declare id int default 0;                       
declare userid int default 0;                   
declare row_count int default 0;                
declare return_number varchar(50) default '';   
declare sign int default 1;                     
declare return_error int default 1;             
START TRANSACTION;  
SELECT rzq_id,rzq_number INTO id,return_number  FROM ecm_tmp_wechat_rzq WHERE rzq_status=0 ORDER BY rzq_id ASC LIMIT 1 FOR UPDATE;
UPDATE ecm_tmp_wechat_rzq SET user_openid=oid,rzq_status=1,rzq_update_time=now() WHERE rzq_id=id;
set row_count = 0;
SELECT ROW_COUNT() INTO row_count;
if row_count > 0 then
    SELECT user_id INTO userid FROM ecm_tmp_wechat_rzq_user WHERE user_openid=oid; 
    set row_count=0;
    set names utf8;
    
    if userid = 0 then
        INSERT INTO ecm_tmp_wechat_rzq_user (`user_openid`,`user_nickname`,`user_order_count`,`user_add_time`) VALUES (oid,nickName,1,now());
        SELECT row_count() INTO row_count;
        if row_count != 1 then
            set sign=0;
        end if;
    else
        UPDATE ecm_tmp_wechat_rzq_user SET user_order_count=user_order_count+1 WHERE user_openid=oid;
        SELECT row_count() INTO row_count;
        if row_count <= 0 then
            set sign=0;
        end if;
    end if;
    if sign=1 then 
        COMMIT;
        SELECT return_number;
    else
        ROLLBACK;
        SELECT return_error;
    end if;
else
    ROLLBACK;
    SELECT return_error;
end if;
END

